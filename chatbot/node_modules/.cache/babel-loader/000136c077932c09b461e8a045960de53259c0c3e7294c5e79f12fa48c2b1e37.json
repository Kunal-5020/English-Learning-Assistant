{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kunal\\\\OneDrive\\\\Desktop\\\\office work\\\\Hindi Chat Bot\\\\chatbot\\\\src\\\\component\\\\ChatInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport \"./css/ChatInput.css\";\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  onSendMessage\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const {\n    transcript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  const startListening = () => SpeechRecognition.startListening({\n    continuous: true,\n    language: 'en-IN'\n  });\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  const handleSend = async () => {\n    if (input.trim()) {\n      onSendMessage({\n        text: input,\n        sender: \"user\"\n      });\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/chat/generate\", {\n          prompt: input\n        });\n        const botResponse = response.data.response;\n        onSendMessage({\n          text: botResponse,\n          sender: \"bot\"\n        });\n      } catch (error) {\n        console.error(\"Error sending message:\", error);\n      }\n      setInput(\"\");\n      SpeechRecognition.stopListening(); // Stop listening after sending the message\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type your message or hold the button to speak...\",\n      className: \"input-field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      className: \"send-button\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 7V17M12 7L16 11M12 7L8 11M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\",\n          stroke: \"#2f2f2f\",\n          strokeWidth: \"1.5\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mic-button\",\n      onMouseUp: SpeechRecognition.stopListening,\n      onMouseDown: startListening,\n      children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"adXVLz8YbaSdxCKu3bZOjYFALiE=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","FaMicrophone","axios","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","ChatInput","onSendMessage","_s","input","setInput","transcript","browserSupportsSpeechRecognition","startListening","continuous","language","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSend","trim","text","sender","response","post","prompt","botResponse","data","error","console","stopListening","className","type","value","onChange","e","target","placeholder","onClick","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","onMouseUp","onMouseDown","_c","$RefreshReg$"],"sources":["C:/Users/kunal/OneDrive/Desktop/office work/Hindi Chat Bot/chatbot/src/component/ChatInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaMicrophone } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport \"./css/ChatInput.css\";\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\n\r\nconst ChatInput = ({ onSendMessage }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const { transcript, browserSupportsSpeechRecognition } = useSpeechRecognition();\r\n\r\n  const startListening = () => SpeechRecognition.startListening({ continuous: true, language: 'en-IN' });\r\n\r\n  useEffect(() => {\r\n    setInput(transcript);\r\n  }, [transcript]);\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <p>Browser does not support speech recognition.</p>;\r\n  }\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim()) {\r\n      onSendMessage({ text: input, sender: \"user\" });\r\n\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/api/chat/generate\", {\r\n          prompt: input,\r\n        });\r\n        const botResponse = response.data.response;\r\n        onSendMessage({ text: botResponse, sender: \"bot\" });\r\n      } catch (error) {\r\n        console.error(\"Error sending message:\", error);\r\n      }\r\n\r\n      setInput(\"\");\r\n      SpeechRecognition.stopListening(); // Stop listening after sending the message\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-input\">\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        placeholder=\"Type your message or hold the button to speak...\"\r\n        className=\"input-field\"\r\n      />\r\n      <button onClick={handleSend} className=\"send-button\">\r\n        <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M12 7V17M12 7L16 11M12 7L8 11M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\" stroke=\"#2f2f2f\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"></path>\r\n        </svg>\r\n      </button>\r\n      <button \r\n        className=\"mic-button\" \r\n        onMouseUp={SpeechRecognition.stopListening}\r\n        onMouseDown={startListening}>\r\n        <FaMicrophone />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,qBAAqB;AAC5B,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEa,UAAU;IAAEC;EAAiC,CAAC,GAAGT,oBAAoB,CAAC,CAAC;EAE/E,MAAMU,cAAc,GAAGA,CAAA,KAAMX,iBAAiB,CAACW,cAAc,CAAC;IAAEC,UAAU,EAAE,IAAI;IAAEC,QAAQ,EAAE;EAAQ,CAAC,CAAC;EAEtGhB,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACC,UAAU,CAAC;EACtB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,IAAI,CAACC,gCAAgC,EAAE;IACrC,oBAAOP,OAAA;MAAAW,QAAA,EAAG;IAA4C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5D;EAEA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAIZ,KAAK,CAACa,IAAI,CAAC,CAAC,EAAE;MAChBf,aAAa,CAAC;QAAEgB,IAAI,EAAEd,KAAK;QAAEe,MAAM,EAAE;MAAO,CAAC,CAAC;MAE9C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,IAAI,CAAC,yCAAyC,EAAE;UAC3EC,MAAM,EAAElB;QACV,CAAC,CAAC;QACF,MAAMmB,WAAW,GAAGH,QAAQ,CAACI,IAAI,CAACJ,QAAQ;QAC1ClB,aAAa,CAAC;UAAEgB,IAAI,EAAEK,WAAW;UAAEJ,MAAM,EAAE;QAAM,CAAC,CAAC;MACrD,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;MAEApB,QAAQ,CAAC,EAAE,CAAC;MACZR,iBAAiB,CAAC8B,aAAa,CAAC,CAAC,CAAC,CAAC;IACrC;EACF,CAAC;EAED,oBACE3B,OAAA;IAAK4B,SAAS,EAAC,YAAY;IAAAjB,QAAA,gBACzBX,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAE1B,KAAM;MACb2B,QAAQ,EAAGC,CAAC,IAAK3B,QAAQ,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC,kDAAkD;MAC9DN,SAAS,EAAC;IAAa;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFf,OAAA;MAAQmC,OAAO,EAAEnB,UAAW;MAACY,SAAS,EAAC,aAAa;MAAAjB,QAAA,eAClDX,OAAA;QAAKoC,OAAO,EAAC,WAAW;QAACC,IAAI,EAAC,MAAM;QAACC,KAAK,EAAC,4BAA4B;QAAA3B,QAAA,eACrEX,OAAA;UAAMuC,CAAC,EAAC,gJAAgJ;UAACC,MAAM,EAAC,SAAS;UAACC,WAAW,EAAC,KAAK;UAACC,aAAa,EAAC,OAAO;UAACC,cAAc,EAAC;QAAO;UAAA/B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7O;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACTf,OAAA;MACE4B,SAAS,EAAC,YAAY;MACtBgB,SAAS,EAAE/C,iBAAiB,CAAC8B,aAAc;MAC3CkB,WAAW,EAAErC,cAAe;MAAAG,QAAA,eAC5BX,OAAA,CAACL,YAAY;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACZ,EAAA,CAvDIF,SAAS;EAAA,QAE4CH,oBAAoB;AAAA;AAAAgD,EAAA,GAFzE7C,SAAS;AAyDf,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}