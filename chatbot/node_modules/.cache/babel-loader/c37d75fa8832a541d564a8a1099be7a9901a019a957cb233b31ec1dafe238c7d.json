{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kunal\\\\OneDrive\\\\Desktop\\\\office work\\\\Hindi Chat Bot\\\\chatbot\\\\src\\\\component\\\\ChatApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ChatDisplay from \"./ChatDisplay\";\nimport ChatInput from \"./ChatInput\";\nimport Navbar from \"./Navbar.jsx\";\nimport \"./css/ChatApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [currentResponseIndex, setCurrentResponseIndex] = useState(-1);\n  const handleSendMessage = message => {\n    // Add the user's message to the chat\n    setMessages(prevMessages => [...prevMessages, message]);\n    setCurrentResponseIndex(messages.length); // Set current index to the latest message\n  };\n  const handleNewChat = () => {\n    setMessages([]);\n    setCurrentResponseIndex(-1);\n  };\n\n  // Move to the previous bot response\n  const handlePreviousResponse = () => {\n    for (let i = currentResponseIndex - 1; i >= 0; i--) {\n      if (messages[i].sender === \"bot\") {\n        setCurrentResponseIndex(i);\n        return;\n      }\n    }\n  };\n\n  // Move to the next bot response\n  const handleNextResponse = () => {\n    for (let i = currentResponseIndex + 1; i < messages.length; i++) {\n      if (messages[i].sender === \"bot\") {\n        setCurrentResponseIndex(i);\n        return;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onNewChat: handleNewChat,\n      onPreviousResponse: handlePreviousResponse,\n      onNextResponse: handleNextResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatDisplay, {\n      messages: messages,\n      currentResponseIndex: currentResponseIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"COQ12WHRChg1nBleBBq5XAt0DRo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChatDisplay","ChatInput","Navbar","jsxDEV","_jsxDEV","App","_s","messages","setMessages","currentResponseIndex","setCurrentResponseIndex","handleSendMessage","message","prevMessages","length","handleNewChat","handlePreviousResponse","i","sender","handleNextResponse","className","children","onNewChat","onPreviousResponse","onNextResponse","fileName","_jsxFileName","lineNumber","columnNumber","onSendMessage","_c","$RefreshReg$"],"sources":["C:/Users/kunal/OneDrive/Desktop/office work/Hindi Chat Bot/chatbot/src/component/ChatApp.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ChatDisplay from \"./ChatDisplay\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport Navbar from \"./Navbar.jsx\";\r\nimport \"./css/ChatApp.css\";\r\n\r\nconst App = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentResponseIndex, setCurrentResponseIndex] = useState(-1);\r\n\r\n  const handleSendMessage = (message) => {\r\n    // Add the user's message to the chat\r\n    setMessages((prevMessages) => [...prevMessages, message]);\r\n    setCurrentResponseIndex(messages.length); // Set current index to the latest message\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setMessages([]);\r\n    setCurrentResponseIndex(-1);\r\n  };\r\n\r\n  // Move to the previous bot response\r\n  const handlePreviousResponse = () => {\r\n    for (let i = currentResponseIndex - 1; i >= 0; i--) {\r\n      if (messages[i].sender === \"bot\") {\r\n        setCurrentResponseIndex(i);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Move to the next bot response\r\n  const handleNextResponse = () => {\r\n    for (let i = currentResponseIndex + 1; i < messages.length; i++) {\r\n      if (messages[i].sender === \"bot\") {\r\n        setCurrentResponseIndex(i);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <Navbar\r\n        onNewChat={handleNewChat}\r\n        onPreviousResponse={handlePreviousResponse}\r\n        onNextResponse={handleNextResponse}\r\n      />\r\n      <ChatDisplay messages={messages} currentResponseIndex={currentResponseIndex} />\r\n      <ChatInput onSendMessage={handleSendMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpE,MAAMY,iBAAiB,GAAIC,OAAO,IAAK;IACrC;IACAJ,WAAW,CAAEK,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,OAAO,CAAC,CAAC;IACzDF,uBAAuB,CAACH,QAAQ,CAACO,MAAM,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BP,WAAW,CAAC,EAAE,CAAC;IACfE,uBAAuB,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;;EAED;EACA,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;IACnC,KAAK,IAAIC,CAAC,GAAGR,oBAAoB,GAAG,CAAC,EAAEQ,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAClD,IAAIV,QAAQ,CAACU,CAAC,CAAC,CAACC,MAAM,KAAK,KAAK,EAAE;QAChCR,uBAAuB,CAACO,CAAC,CAAC;QAC1B;MACF;IACF;EACF,CAAC;;EAED;EACA,MAAME,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,KAAK,IAAIF,CAAC,GAAGR,oBAAoB,GAAG,CAAC,EAAEQ,CAAC,GAAGV,QAAQ,CAACO,MAAM,EAAEG,CAAC,EAAE,EAAE;MAC/D,IAAIV,QAAQ,CAACU,CAAC,CAAC,CAACC,MAAM,KAAK,KAAK,EAAE;QAChCR,uBAAuB,CAACO,CAAC,CAAC;QAC1B;MACF;IACF;EACF,CAAC;EAED,oBACEb,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BjB,OAAA,CAACF,MAAM;MACLoB,SAAS,EAAEP,aAAc;MACzBQ,kBAAkB,EAAEP,sBAAuB;MAC3CQ,cAAc,EAAEL;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFxB,OAAA,CAACJ,WAAW;MAACO,QAAQ,EAAEA,QAAS;MAACE,oBAAoB,EAAEA;IAAqB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/ExB,OAAA,CAACH,SAAS;MAAC4B,aAAa,EAAElB;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9CID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAgDT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}