{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kunal\\\\OneDrive\\\\Desktop\\\\office work\\\\Hindi Chat Bot\\\\chatbot\\\\src\\\\component\\\\ChatDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport \"./css/ChatDisplay.css\";\nimport { ReactComponent as BotIcon } from '../asset/bot-icon.svg'; // Add your SVG for bot icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatDisplay = ({\n  messages,\n  currentResponseIndex\n}) => {\n  _s();\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages, currentResponseIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-display\",\n    children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${msg.sender} ${index === currentResponseIndex ? \"highlighted\" : \"\"}`,\n      children: [msg.sender === \"bot\" && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"bot-icon\",\n        children: /*#__PURE__*/_jsxDEV(BotIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"message-text\",\n        children: msg.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatDisplay, \"BSXkY06UzTG8qL2envbQpCncJSI=\");\n_c = ChatDisplay;\nexport default ChatDisplay;\nvar _c;\n$RefreshReg$(_c, \"ChatDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","ReactComponent","BotIcon","jsxDEV","_jsxDEV","ChatDisplay","messages","currentResponseIndex","_s","chatEndRef","_chatEndRef$current","current","scrollIntoView","behavior","className","children","map","msg","index","sender","fileName","_jsxFileName","lineNumber","columnNumber","text","ref","_c","$RefreshReg$"],"sources":["C:/Users/kunal/OneDrive/Desktop/office work/Hindi Chat Bot/chatbot/src/component/ChatDisplay.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport \"./css/ChatDisplay.css\";\r\nimport { ReactComponent as BotIcon } from '../asset/bot-icon.svg';  // Add your SVG for bot icon\r\n\r\nconst ChatDisplay = ({ messages, currentResponseIndex }) => {\r\n  const chatEndRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages, currentResponseIndex]);\r\n\r\n  return (\r\n    <div className=\"chat-display\">\r\n      {messages.map((msg, index) => (\r\n        <div\r\n          key={index}\r\n          className={`message ${msg.sender} ${index === currentResponseIndex ? \"highlighted\" : \"\"}`}\r\n        >\r\n          {msg.sender === \"bot\" && (\r\n            <span className=\"bot-icon\">\r\n              <BotIcon />\r\n            </span>\r\n          )}\r\n          <span className=\"message-text\">{msg.text}</span>\r\n        </div>\r\n      ))}\r\n      <div ref={chatEndRef} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,uBAAuB;AAC9B,SAASC,cAAc,IAAIC,OAAO,QAAQ,uBAAuB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,WAAW,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAqB,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAMC,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IAAA,IAAAW,mBAAA;IACd,CAAAA,mBAAA,GAAAD,UAAU,CAACE,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACP,QAAQ,EAAEC,oBAAoB,CAAC,CAAC;EAEpC,oBACEH,OAAA;IAAKU,SAAS,EAAC,cAAc;IAAAC,QAAA,GAC1BT,QAAQ,CAACU,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBd,OAAA;MAEEU,SAAS,EAAE,WAAWG,GAAG,CAACE,MAAM,IAAID,KAAK,KAAKX,oBAAoB,GAAG,aAAa,GAAG,EAAE,EAAG;MAAAQ,QAAA,GAEzFE,GAAG,CAACE,MAAM,KAAK,KAAK,iBACnBf,OAAA;QAAMU,SAAS,EAAC,UAAU;QAAAC,QAAA,eACxBX,OAAA,CAACF,OAAO;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CACP,eACDnB,OAAA;QAAMU,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEE,GAAG,CAACO;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA,GAR3CL,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASP,CACN,CAAC,eACFnB,OAAA;MAAKqB,GAAG,EAAEhB;IAAW;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACf,EAAA,CAzBIH,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA2BjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}