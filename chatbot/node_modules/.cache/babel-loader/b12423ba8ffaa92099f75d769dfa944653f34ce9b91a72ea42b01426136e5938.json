{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kunal\\\\OneDrive\\\\Documents\\\\Github\\\\English-Learning-Assistant\\\\chatbot\\\\src\\\\component\\\\ChatInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { FaMicrophone } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport \"./css/ChatInput.css\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatInput = ({\n  onSendMessage\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const {\n    transcript,\n    browserSupportsSpeechRecognition,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [history, setHistory] = useState([]);\n  const [UserResponse, loadResponse] = useState(\"\");\n  const [conversationStarted, setConversationStarted] = useState(false);\n\n  // Start listening for speech\n  const startListening = () => {\n    resetTranscript();\n    SpeechRecognition.startListening({\n      continuous: true,\n      language: \"en\"\n    });\n  };\n\n  // Stop listening for speech\n  const stopListening = () => {\n    SpeechRecognition.stopListening();\n  };\n  useEffect(() => {\n    setInput(transcript);\n  }, [transcript]);\n\n  // Handle starting the conversation\n  const handleStartConversation = async () => {\n    const startMessage = \"Start the conversation\";\n    const userMessage = {\n      text: startMessage,\n      sender: \"user\"\n    };\n    setHistory(prevHistory => [...prevHistory, userMessage]);\n    onSendMessage(userMessage);\n    try {\n      const response = await axios.post(\"https://english-assistant-server.onrender.com/api/chat/generate\", {\n        messagePayload: {\n          history: [userMessage],\n          current_message: {\n            sender: \"user\",\n            text: startMessage\n          }\n        }\n      });\n      const Response = response.data.response;\n      const botResponse = Response.BotResponse;\n      const userResponse = Response.UserResponse;\n      setHistory(prevHistory => [...prevHistory, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n      onSendMessage({\n        text: botResponse,\n        sender: \"bot\"\n      });\n      loadResponse(userResponse);\n      setConversationStarted(true);\n    } catch (error) {\n      console.error(\"Error starting conversation:\", error);\n    }\n  };\n\n  // Handle sending user input\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: \"user\"\n    };\n    setHistory(prevHistory => [...prevHistory, userMessage]);\n    onSendMessage(userMessage);\n    setInput(\"\");\n    try {\n      const messagePayload = {\n        history: history.concat(userMessage),\n        current_message: {\n          sender: \"user\",\n          text: input\n        }\n      };\n      const response = await axios.post(\"http://localhost:5000/api/chat/generate\", {\n        messagePayload\n      });\n      const Response = response.data.response;\n      const botResponse = Response.BotResponse;\n      const userResponse = Response.UserResponse;\n      setHistory(prevHistory => [...prevHistory, {\n        text: botResponse,\n        sender: \"bot\"\n      }]);\n      onSendMessage({\n        text: botResponse,\n        sender: \"bot\"\n      });\n      loadResponse(userResponse);\n    } catch (error) {\n      console.error(\"Error sending message:\", error);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Your browser does not support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input\",\n    children: [conversationStarted && UserResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-response-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Expected Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), \" \", UserResponse]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: !conversationStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-button\",\n        onClick: handleStartConversation,\n        children: \"Start the Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type your response here...\",\n          className: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mic-button\",\n          onMouseDown: startListening,\n          onMouseUp: stopListening,\n          children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: handleSend,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            xmlns: \"http://www.w3.org/2000/svg\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M12 7V17M12 7L16 11M12 7L8 11M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\",\n              stroke: \"#2f2f2f\",\n              strokeWidth: \"1.5\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInput, \"7fVzaDrFpmVKMSyItnK3tzG6ddY=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = ChatInput;\nexport default ChatInput;\nvar _c;\n$RefreshReg$(_c, \"ChatInput\");","map":{"version":3,"names":["React","useState","useEffect","FaMicrophone","axios","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInput","onSendMessage","_s","input","setInput","transcript","browserSupportsSpeechRecognition","resetTranscript","history","setHistory","UserResponse","loadResponse","conversationStarted","setConversationStarted","startListening","continuous","language","stopListening","handleStartConversation","startMessage","userMessage","text","sender","prevHistory","response","post","messagePayload","current_message","Response","data","botResponse","BotResponse","userResponse","error","console","handleSend","trim","concat","handleKeyDown","e","key","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","type","value","onChange","target","onKeyDown","placeholder","onMouseDown","onMouseUp","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["C:/Users/kunal/OneDrive/Documents/Github/English-Learning-Assistant/chatbot/src/component/ChatInput.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FaMicrophone } from \"react-icons/fa\";\r\nimport axios from \"axios\";\r\nimport \"./css/ChatInput.css\";\r\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\r\n\r\nconst ChatInput = ({ onSendMessage }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const { transcript, browserSupportsSpeechRecognition, resetTranscript } = useSpeechRecognition();\r\n  const [history, setHistory] = useState([]);\r\n  const [UserResponse, loadResponse] = useState(\"\");\r\n  const [conversationStarted, setConversationStarted] = useState(false);\r\n\r\n  // Start listening for speech\r\n  const startListening = () => {\r\n    resetTranscript();\r\n    SpeechRecognition.startListening({ continuous: true, language: \"en\" });\r\n  };\r\n\r\n  // Stop listening for speech\r\n  const stopListening = () => {\r\n    SpeechRecognition.stopListening();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setInput(transcript);\r\n  }, [transcript]);\r\n\r\n  // Handle starting the conversation\r\n  const handleStartConversation = async () => {\r\n    const startMessage = \"Start the conversation\";\r\n    const userMessage = { text: startMessage, sender: \"user\" };\r\n    setHistory((prevHistory) => [...prevHistory, userMessage]);\r\n    onSendMessage(userMessage);\r\n\r\n    try {\r\n      const response = await axios.post(\"https://english-assistant-server.onrender.com/api/chat/generate\", {\r\n        messagePayload: {\r\n          history: [userMessage],\r\n          current_message: { sender: \"user\", text: startMessage },\r\n        },\r\n      });\r\n\r\n      const Response = response.data.response;\r\n      const botResponse = Response.BotResponse;\r\n      const userResponse = Response.UserResponse;\r\n\r\n      setHistory((prevHistory) => [...prevHistory, { text: botResponse, sender: \"bot\" }]);\r\n      onSendMessage({ text: botResponse, sender: \"bot\" });\r\n      loadResponse(userResponse);\r\n      setConversationStarted(true);\r\n    } catch (error) {\r\n      console.error(\"Error starting conversation:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle sending user input\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { text: input, sender: \"user\" };\r\n    setHistory((prevHistory) => [...prevHistory, userMessage]);\r\n    onSendMessage(userMessage);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const messagePayload = {\r\n        history: history.concat(userMessage),\r\n        current_message: { sender: \"user\", text: input },\r\n      };\r\n\r\n      const response = await axios.post(\"http://localhost:5000/api/chat/generate\", {\r\n        messagePayload,\r\n      });\r\n\r\n      const Response = response.data.response;\r\n      const botResponse = Response.BotResponse;\r\n      const userResponse = Response.UserResponse;\r\n\r\n      setHistory((prevHistory) => [...prevHistory, { text: botResponse, sender: \"bot\" }]);\r\n      onSendMessage({ text: botResponse, sender: \"bot\" });\r\n      loadResponse(userResponse);\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  if (!browserSupportsSpeechRecognition) {\r\n    return <p>Your browser does not support speech recognition.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-input\">\r\n      {conversationStarted && UserResponse && (\r\n        <div className=\"user-response-display\">\r\n          <strong>Expected Response:</strong> {UserResponse}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"input-container\">\r\n        {!conversationStarted ? (\r\n          <button className=\"start-button\" onClick={handleStartConversation}>\r\n            Start the Conversation\r\n          </button>\r\n        ) : (\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyDown={handleKeyDown}\r\n              placeholder=\"Type your response here...\"\r\n              className=\"input-field\"\r\n            />\r\n            <button\r\n              className=\"mic-button\"\r\n              onMouseDown={startListening}\r\n              onMouseUp={stopListening}\r\n            >\r\n              <FaMicrophone />\r\n            </button>\r\n            <button className=\"send-button\" onClick={handleSend}>\r\n              <svg viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path\r\n                  d=\"M12 7V17M12 7L16 11M12 7L8 11M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\"\r\n                  stroke=\"#2f2f2f\"\r\n                  strokeWidth=\"1.5\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}