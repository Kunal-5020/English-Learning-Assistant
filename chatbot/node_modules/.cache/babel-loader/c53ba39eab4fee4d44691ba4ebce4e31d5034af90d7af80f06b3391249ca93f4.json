{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kunal\\\\OneDrive\\\\Documents\\\\Github\\\\English-Learning-Assistant\\\\chatbot\\\\src\\\\component\\\\character.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Character = ({\n  isSpeaking\n}) => {\n  _s();\n  const [currentMouth, setCurrentMouth] = useState(\"neutral.png\");\n  useEffect(() => {\n    if (isSpeaking) {\n      const mouthImages = [\"10.png\", \"1.png\"];\n      let index = 0;\n      const interval = setInterval(() => {\n        setCurrentMouth(mouthImages[index]);\n        index = (index + 1) % mouthImages.length;\n      }, 400); // Change every 300ms\n      return () => clearInterval(interval); // Cleanup on stop\n    } else {\n      setCurrentMouth(\"1.png\");\n    }\n  }, [isSpeaking]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      display: \"inline-block\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"/images/character.png\",\n      alt: \"Character Body\",\n      style: {\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/images/${currentMouth}`,\n      alt: \"Character Mouth\",\n      style: {\n        position: \"absolute\",\n        top: \"59%\",\n        left: \"51%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"35px\",\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Character, \"lHCPiDYFefH6ErBqmTQCJyzjWf4=\");\n_c = Character;\nexport default Character;\nvar _c;\n$RefreshReg$(_c, \"Character\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Character","isSpeaking","_s","currentMouth","setCurrentMouth","mouthImages","index","interval","setInterval","length","clearInterval","style","position","display","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","height","_c","$RefreshReg$"],"sources":["C:/Users/kunal/OneDrive/Documents/Github/English-Learning-Assistant/chatbot/src/component/character.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Character = ({ isSpeaking}) => {\r\n  const [currentMouth, setCurrentMouth] = useState(\"neutral.png\");\r\n\r\n  useEffect(() => {\r\n    if (isSpeaking) {\r\n      const mouthImages = [\"10.png\",\"1.png\"];\r\n      let index = 0;\r\n      const interval = setInterval(() => {\r\n        setCurrentMouth(mouthImages[index]);\r\n        index = (index + 1) % mouthImages.length;\r\n      }, 400); // Change every 300ms\r\n      return () => clearInterval(interval); // Cleanup on stop\r\n    } else {\r\n      setCurrentMouth(\"1.png\");\r\n    }\r\n  }, [isSpeaking]);\r\n\r\n  return (\r\n    <div style={{ position: \"relative\", display: \"inline-block\" }}>\r\n      <img\r\n        src=\"/images/character.png\"\r\n        alt=\"Character Body\"\r\n        style={{ width: \"300px\" }}\r\n      />\r\n      <img\r\n        src={`/images/${currentMouth}`}\r\n        alt=\"Character Mouth\"\r\n        style={{\r\n          position: \"absolute\",\r\n          top: \"59%\",\r\n          left: \"51%\",\r\n          transform: \"translate(-50%, -50%)\",\r\n          width: \"35px\",\r\n          height:\"20px\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,aAAa,CAAC;EAE/DC,SAAS,CAAC,MAAM;IACd,IAAII,UAAU,EAAE;MACd,MAAMI,WAAW,GAAG,CAAC,QAAQ,EAAC,OAAO,CAAC;MACtC,IAAIC,KAAK,GAAG,CAAC;MACb,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;QACjCJ,eAAe,CAACC,WAAW,CAACC,KAAK,CAAC,CAAC;QACnCA,KAAK,GAAG,CAACA,KAAK,GAAG,CAAC,IAAID,WAAW,CAACI,MAAM;MAC1C,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACT,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACLH,eAAe,CAAC,OAAO,CAAC;IAC1B;EACF,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC;EAEhB,oBACEF,OAAA;IAAKY,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAAC,QAAA,gBAC5Df,OAAA;MACEgB,GAAG,EAAC,uBAAuB;MAC3BC,GAAG,EAAC,gBAAgB;MACpBL,KAAK,EAAE;QAAEM,KAAK,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFtB,OAAA;MACEgB,GAAG,EAAE,WAAWZ,YAAY,EAAG;MAC/Ba,GAAG,EAAC,iBAAiB;MACrBL,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBU,GAAG,EAAE,KAAK;QACVC,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,uBAAuB;QAClCP,KAAK,EAAE,MAAM;QACbQ,MAAM,EAAC;MACT;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CAtCIF,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AAwCf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}